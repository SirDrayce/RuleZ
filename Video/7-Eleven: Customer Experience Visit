// Last Updated: 3/24/2020

// If shop date is entered (any date), set answer to reimbursement currency value to "5.00".
ifQ(1)
.answered()
.setValue(Q(6401), "5.00")

// Question updated again on 6/3/2019 value pointed //to question 6301 instead of 6401 -mjm.

// If ulg set is 'MA shops vs Scored', appear QIDs [6891, 6901, 6911, 6921, 6931, 6941, 6951, 6961, 6971, 6981, 6991, 7001, 7011, 7021, 7031, 7041, 7051, 7071, 7081, 7091, 7121, 7131, 7061, 7101, 7111, 7141, 7151, 7161, 7171, 7181, 7191, 7201, 7211, 7221, 7231, 7241, 7251, 7261, 7271, 7281, 7291, 7301, 7311, 7321, 7331, 7341, 7351, 7361, 7371, 7381, 7391, 7401, 7411, 7421, 7341, 7441].
ifQ()
.ulgSetIs('MA shops vs Scored')
.appear(Q(6891), Q(6901), Q(6911), Q(6921), Q(6931), Q(6941), Q(6951), Q(6961), Q(6971), Q(6981), Q(6991), Q(7001), Q(7011), Q(7021), Q(7031), Q(7041), Q(7051), Q(7071), Q(7081), Q(7091), Q(7121), Q(7131), Q(7061), Q(7101), Q(7111), Q(7141), Q(7151), Q(7161), Q(7171), Q(7181), Q(7191), Q(7201), Q(7211), Q(7221), Q(7231), Q(7241), Q(7251), Q(7261), Q(7271), Q(7281), Q(7291), Q(7301), Q(7311), Q(7321), Q(7331), Q(7341), Q(7351), Q(7361), Q(7371), Q(7381), Q(7391), Q(7401), Q(7411), Q(7421), Q(7431), Q(7441))

// If ulg set is NOT 'MA shops vs Scored', clear answer to QIDs [6891, 6901, 6911, 6921, 6931, 6941, 6951, 6961, 6971, 6981, 6991, 7001, 7011, 7021, 7031, 7041, 7051, 7071, 7081, 7091, 7121, 7131, 7061, 7101, 7111, 7141, 7151, 7161, 7171, 7181, 7191, 7201, 7211, 7221, 7231, 7241, 7251, 7261, 7271, 7281, 7291, 7301, 7311, 7321, 7331, 7341, 7351, 7361, 7371, 7381, 7391, 7401, 7411, 7421, 7341, 7441].
ifQ()
.ulgSetNot('MA shops vs Scored')
.clearAnswer(Q(6891), Q(6901), Q(6911), Q(6921), Q(6931), Q(6941), Q(6951), Q(6961), Q(6971), Q(6981), Q(6991), Q(7001), Q(7011), Q(7021), Q(7031), Q(7041), Q(7051), Q(7071), Q(7081), Q(7091), Q(7121), Q(7131), Q(7061), Q(7101), Q(7111), Q(7141), Q(7151), Q(7161), Q(7171), Q(7181), Q(7191), Q(7201), Q(7211), Q(7221), Q(7231), Q(7241), Q(7251), Q(7261), Q(7271), Q(7281), Q(7291), Q(7301), Q(7311), Q(7321), Q(7331), Q(7341), Q(7351), Q(7361), Q(7371), Q(7381), Q(7391), Q(7401), Q(7411), Q(7421), Q(7431), Q(7441))

// If ulg is 'Dark Stores', set value to Option 1 to QID 6861.
ifQ()
.ulgIs('Dark Stores')
.setValue(Q(6861), 1)

//***************************
// RESTROOMS - Begin
//***************************

// If QID 6221 is answered Option 1, then show QID 6231.
ifQ(6221)
.answered(1)
.appear(Q(6231))

// If QID 6221 is answered Option 0 or 2, then force hide QIDs: [6241, 6251, 3061, 3221, 6261, 6271, 6281] and clear answers to QIDs: [6231, 6241, 6251, 3061, 3221, 6261, 6271, 6281, 6481].
ifQ(6221)
.answered(0,2)
.forceDisappear(Q(6241), Q(6251), Q(3061), Q(3221), Q(6261), Q(6271), Q(6281), Q(6481))
.clearAnswer(Q(6231), Q(6241), Q(6251), Q(3061), Q(3221), Q(6261), Q(6271), Q(6281), Q(6481))

// If QID 6221 is answered Option 1, then show QID 6231.
ifQ(6221)
.answered(1)
.appear(Q(6231))

// If QID 6231 is answered Options 1,3, or 4, then show QID 6241.
ifQ(6231)
.answered(1,3,4)
.appear(Q(6241))

// If QID 6231 is answered Option 1, then set value to Option 4 to QID 6241; hide Options 1,2,3, and 5 to QID 6241; and show QIDs: [6251, 6261, 6271, 6281].
ifQ(6231)
.answered(1)
.setValue(Q(6241), 4)
.hideOptions(Q(6241), 1,2,3,5)
.appear(Q(6251), Q(6261), Q(6271), Q(6281))

// If QID 6231 is answered Option 2, then clear answers to QIDs: [6241, 6251. 3061, 3221, 6261, 6271, 6281].
ifQ(6231)
.answered(2)
.clearAnswer(Q(6241), Q(6251), Q(3061), Q(3221), Q(6261), Q(6271), Q(6281))

// If QID 6241 is answered Options 1 or 4, then show QIDs: [6251, 6261, 6271, 6281].
ifQ(6241)
.answered(1,4)
.appear(Q(6251), Q(6261), Q(6271), Q(6281))

// If QID 6241 is answered Option 1, then show QID 6481 and award the bonus points (3 total).
ifQ(6241)
.answered(1)
.setValue(Q(6481), 1)

// If QID 6241 is answered Options 2,3,4,or 5, then hide and clear answer to QID 6481.
ifQ(6241)
.answered(2,3,4,5)
.clearAnswer(Q(6481))

// If QID 6241 is answered Options 3 or 5, then set value Option 3 to QID 6251; set value Option 4 to QID 6261; set value Option 6 to QID 6271; set value Option 3 to QID 6281.
ifQ(6241)
.answered(3,5)
.setValue(Q(6251), 3)
.setValue(Q(6261), 4)
.setValue(Q(6271), 6)
.setValue(Q(6281), 3)

// If QID 6251 is answered Option 2, then show QID 3061.
ifQ(6251)
.answered(2)
.appear(Q(3061))

// If QID 3061 is answered Option 7, then show QID 3221.
ifQ(3061)
.answered(7)
.appear(Q(3221))

// If QID 6221 is answered Option 2, then set value to Option 1 to QIDs [6601, 6611, 6621, 6631].
ifQ(6221)
.answered(2)
.setValue(Q(6601), 1)
.setValue(Q(6611), 1)
.setValue(Q(6621), 1)
.setValue(Q(6631), 1)

// If QID 6231 is answered Option 2, then set value to Option 2 to QIDs [6601, 6611, 6621, 6631].
ifQ(6231)
.answered(2)
.setValue(Q(6601), 2)
.setValue(Q(6611), 2)
.setValue(Q(6621), 2)
.setValue(Q(6631), 2)

//***************************
// RESTROOMS - End
//***************************





// If shop date is AFTER February 29, 2020 AND BEFORE May 1, 2020, then set values to QIDs: [111 = Option 3], [5271 = Option 3], [5251 = Option 3], [2341 = Option 3], [6691 = Option 5], [2421 = Option 3]
ifQ()
.dateAfter("2020-02-29")
.dateBefore("2020-05-01")
.setValue(Q(111), 3)
.setValue(Q(5271), 3)
.setValue(Q(5251), 3)
.setValue(Q(2341), 3)
.setValue(Q(6691), 5)
.setValue(Q(2421), 3)

// If QID 3031 is answered Option [1 or 3], then disappear and clear answer to QID 2911.
ifQ(3031)
.answered(1,3)
.disappear(Q(2911))
.clearAnswer(Q(2911))

// Sets Freshness 2431 by date calculation
//If no date is entered, set Freshness to N/A
ifQ(5521)
.notAnswered()
.setValue(Q(2431),3)

// Otherwise, sub today from the date entered and store the value in 5531
ifQ(5521)
.answered()
.sub(Q(5521), Q(1))
.store(Q(5531))

// If 5531 is less than the shop date, mark not fresh
ifQ(5531)
.answered()
.andifQ(5531)
.lessThan(0)
.setValue(Q(2431),2)

// If 5531 is greater than the shop date, mark as fresh
ifQ(5531)
.greaterThanOrEqual(0)
.setValue(Q(2431),1)

// Calc guest's approx wait in line (store counter)
ifQ(5541)
.answered()
.andQ(5551)
.answered()
.sub(Q(5551) , Q(5541))
.store(Q(3091))

// Set radio button to reflect time spent in line (store counter)
//Under 1  min
ifQ(3091)
.answered()
.greaterThanOrEqual(0)
.andifQ(3091)
.lessThan(60)
.setValue( Q(3101),1)

// Under 2  min
ifQ(3091)
.greaterThanOrEqual(61)
.andifQ(3091)
.lessThanOrEqual(120)
.setValue( Q(3101),2)

// Under 3  min
ifQ(3091)
.greaterThanOrEqual(121)
.andifQ(3091)
.lessThanOrEqual(180)
.setValue( Q(3101),3)

// Over 3  min
ifQ(3091)
.greaterThanOrEqual(181)
.setValue( Q(3101),4)
//End of setting radio buttons for time spent in line (store counter)

// If the time in line is less than 2 min, set the under 2 min question to yes, otherwise no
// Under 2 min
ifQ(3091)
.lessThan(120)
.setValue(Q(2211),1)

// Over 2 min
ifQ(3091)
.greaterThanOrEqual(120)
.setValue(Q(2211),2)

// Sets All of the Above if all options are selected for the Fuel Island Stock levels
ifQ(1571)
.answered(1)
.andQ(1571)
.answered(2)
.andQ(1571)
.answered(3)
.setValue(Q(1571),1,2,3,4)


// Sets All of the Above if all options are selected for the Restroom Stock levels
ifQ(6271)
.answered(1)
.andQ(6271)
.answered(2)
.andQ(6271)
.answered(3)
.setValue(Q(6271),1,2,3,4);

// Sets All of the Above if all options are selected for the Employee Uniform reqs
ifQ(1631)
.answered(1)
.andQ(1631)
.answered(2)
.andQ(1631)
.answered(3)
.setValue(Q(1631),1,2,3,4);




//***************************
// COVID QUESTIONS - Begin
//***************************

// If QID 7741 is answered Option [1,2,3,4, AND 5], then set value to QID 7741 to Option [1,2,3,4,5,6].
ifQ(7741)
.answered([1,2,3,4,5])
.setValue(Q(7741), 1,2,3,4,5,6)

//***************************
// COVID QUESTIONS - End
//***************************




//***************************
// INTERNAL DATA - Begin
//***************************

// If QID 1 answered anything, then subtract QID 2021 from QID 1 and store output in QID 6521.
ifQ(1)
.answered()
.sub(Q(2021), Q(1))
.store(Q(6521))

// If QID 1 answered anything, then divide QID 6521 by 3600000 and store output in QID 6531.
ifQ(1)
.answered()
.divide(Q(6521), 3600000)
.store(Q(6531))

// If QID 1 answered anything, then divide QID 6531 by 24 and store output in QID 6541.
ifQ(1)
.answered()
.divide(Q(6531), 24)
.store(Q(6541))

//***************************
// INTERNAL DATA - End
//***************************
